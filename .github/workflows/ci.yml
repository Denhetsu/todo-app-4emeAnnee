name: CI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  ci-base:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4

      - name: Installer l'environnement (Python)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 requests

      - name: Lancer la vérification
        run: |
          flake8 .    # linting
          PYTHONPATH=. pytest     # tests unitaires
      
      - name: Notification Discord (succès)
        if: ${{ success() }}
        run: |
          python - <<'EOF'
          import os, requests, json
          webhook = os.environ['DISCORD_WEBHOOK_URL']
          data = {
            "content": f"✅ **CI réussie**\n"
                   f"Workflow: `{os.environ['GITHUB_WORKFLOW']}`\n"
                   f"Branche: `{os.environ['GITHUB_REF_NAME']}`\n"
                   f"Auteur: {os.environ['GITHUB_ACTOR']}\n"
                   f"[Lien du run]({os.environ['GITHUB_SERVER_URL']}/{os.environ['GITHUB_REPOSITORY']}/actions/runs/{os.environ['GITHUB_RUN_ID']})"
          }

          try:
            requests.post(webhook, data=json.dumps(data), headers={"Content-Type": "application/json"})
          except Exception as e:
            print("Erreur notification Discord :", e)

        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        continue-on-error: true

      - name: Notification Discord (échec)
        if: ${{ failure() }}
        run: |
          python - <<'EOF'
          import os, requests, json
          webhook = os.environ['DISCORD_WEBHOOK_URL']
          data = {
            "content": f"❌ **CI échouée**\n"
                   f"Workflow: `{os.environ['GITHUB_WORKFLOW']}`\n"
                   f"Branche: `{os.environ['GITHUB_REF_NAME']}`\n"
                   f"Auteur: {os.environ['GITHUB_ACTOR']}\n"
                   f"[Lien du run]({os.environ['GITHUB_SERVER_URL']}/{os.environ['GITHUB_REPOSITORY']}/actions/runs/{os.environ['GITHUB_RUN_ID']})"
          }

          try:
            requests.post(webhook, data=json.dumps(data), headers={"Content-Type": "application/json"})
          except Exception as e:
            print("Erreur notification Discord :", e)

        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        continue-on-error: true